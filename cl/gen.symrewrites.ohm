Prolog {
  Program = Sexpr+
  Sexpr =
    | "(" Sexpr* ")" -- list
    | "'" Sexpr -- quoted
    | string -- string
    | number -- number
    | Symbol -- symbol

  separator = "(" | ")" | "'" | "," | "@" | "\x60" | ";" | " . "
  vcomma = "â‚“"
  Symbol = symchar+ vcomma?
  symchar = ~vcomma ~separator ~space any
  
  string = dq (~dq any)* dq
  dq = "\""
  number = digit+ vcomma?
  semiColonComment = ";" (~"\n" any)* "\n"
  space += semiColonComment
}


SymRewrites <: Prolog {
  Symbol :=
    | sym<"#t"> -- true
    | sym<"#f"> -- false
    | sym<"pair?"> -- isPair
    | sym<"string?"> -- isString
    | sym<"r!"> -- rBang
    | sym<"foreign?"> -- isForeign
    | sym<"var?"> -- isVar
    | sym<"null?"> -- isEmptyList
    | sym<"set!"> -- mutate
    | sym<"set_car!"> -- mutate_car
    | sym<"e*"> -- eStar
    | symchar+ vcomma? -- other

  sym<s> = s vcomma?
}
